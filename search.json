[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "quarto-github-pages-actions-example",
    "section": "",
    "text": "This is an example project that creates a website using GitHub actions with Quarto.\n\nThe repo: https://github.com/anielsen001/quarto-github-pages-actions-example\nThe webpage: https://anielsen001.github.io/quarto-github-pages-actions-example"
  },
  {
    "objectID": "index.html#create-a-quarto-project",
    "href": "index.html#create-a-quarto-project",
    "title": "quarto-github-pages-actions-example",
    "section": "Create a quarto project",
    "text": "Create a quarto project\nquarto create-project"
  },
  {
    "objectID": "index.html#python-code-example",
    "href": "index.html#python-code-example",
    "title": "quarto-github-pages-actions-example",
    "section": "Python code example",
    "text": "Python code example\nAn executable python code example can be found in sources/python.qmd"
  },
  {
    "objectID": "index.html#computation-freeze",
    "href": "index.html#computation-freeze",
    "title": "quarto-github-pages-actions-example",
    "section": "Computation freeze",
    "text": "Computation freeze\nThis example uses the code computation freeze directive."
  },
  {
    "objectID": "index.html#configure-the-repository-to-use-gh-pages",
    "href": "index.html#configure-the-repository-to-use-gh-pages",
    "title": "quarto-github-pages-actions-example",
    "section": "Configure the repository to use gh-pages",
    "text": "Configure the repository to use gh-pages\nThe following command step quarto publish wonâ€™t complete unless this is set up first."
  },
  {
    "objectID": "index.html#manually-perform-quarto-publish",
    "href": "index.html#manually-perform-quarto-publish",
    "title": "quarto-github-pages-actions-example",
    "section": "Manually perform quarto publish",
    "text": "Manually perform quarto publish\nhttps://quarto.org/docs/publishing/github-pages.html#publish-action\nquarto publish gh-pages\nThis may take a long time to run. The documentation says that this will create a file called _publish.yml but that did not happen for me (quarto version 1.2.269).\nInstead, manually create a .github/workflows/publish.yml\nmkdir -p .github/workflows\ntouch .github/workflows/publish.yml\nand put the following into publish.yml (copied directory from quarto docs\non:\n  workflow_dispatch:\n  push:\n    branches: main\n\nname: Quarto Publish\n\njobs:\n  build-deploy:\n    runs-on: ubuntu-latest\n    permissions:\n      contents: write\n    steps:\n      - name: Check out repository\n        uses: actions/checkout@v3\n\n      - name: Set up Quarto\n        uses: quarto-dev/quarto-actions/setup@v2\n\n      - name: Render and Publish\n        uses: quarto-dev/quarto-actions/publish@v2\n        with:\n          target: gh-pages\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}"
  },
  {
    "objectID": "index.html#references",
    "href": "index.html#references",
    "title": "quarto-github-pages-actions-example",
    "section": "References",
    "text": "References\n\nQuarto Documentation"
  },
  {
    "objectID": "sources/python.html",
    "href": "sources/python.html",
    "title": "A python example",
    "section": "",
    "text": "This is just an example with executable code.\n\nprint(\"hello quarto world!\")\n\nhello quarto world!"
  }
]